print("hello")
getwd()
setwd("E:\Academics\VIT\Lab or Practicals\Data Analytics")
setwd("E:\\Academics\\VIT\\Lab or Practicals\\Data Analytics")
getwd()
data(mtcars)
MyDF<-mtcars
mpg2<-cbind(mtcars$mpg, mtcars$cyl,mtcars$disp)
obs4 <- mtcars[4:10,]
cols4 <- mtcars[,c(1,2,3)]
subset1 <- mtcars[c("mpg", "cyl")]
subset2 <- subset(mtcars, mpg>18)
subset3 <- subset(mtcars, select= c(mpg, cyl))
subset4 <- subset(mtcars, cyl>5 & mpg>16, select=c(-mpg,-cyl))
data(mtcars)
data(mtcars)
MyDF<-mtcars
mpg2<-cbind(mtcars$mpg, mtcars$cyl,mtcars$disp)
obs4 <- mtcars[4:10,]
cols4 <- mtcars[,c(1,2,3)]
subset1 <- mtcars[c("mpg", "cyl")]
subset2 <- subset(mtcars, mpg>18)
subset3 <- subset(mtcars, select= c(mpg, cyl))
subset4 <- subset(mtcars, cyl>5 & mpg>16, select=c(-mpg,-cyl))
subset4
data<-read.csv("stores.csv")
View(data)
dim(data)
names(data)
# add new variables to a data frame
#Method-1
stores<-data
stores$MyColumn <- (stores$AcqCostPercust + stores$OperatingCost)/2
View(stores)
dim(stores)
#Method-2
stores = transform(stores, MyColumn2 = (AcqCostPercust + OperatingCost)/2)
View(stores)
#Method-2
stores2 = transform(stores, MyColumn2 = (AcqCostPercust + OperatingCost)/2)
View(stores2)
stores$storeclass1[stores$TotalSales > 240 & stores$TotalSales <= 300] <- "High Perform Store"
View(stores)
stores$storeclass1[1] <- "Average Perform store"
View(stores)
stores$storeclass1[3] <- "Average Perform store"
View(stores)
stores$TotalSales > 120 & stores$TotalSales <= 240
View(stores)
stores$storeclass1[1>2] <- "Low Perform Store"
View(stores)
stores$storeclass1[1<2] <- "Low Perform Store"
View(stores)
stores$storeclass2 <- cut(stores$TotalSales,
breaks=c(-Inf, 120, 240, Inf),
labels=c("low","medium","high"))
View(stores)
df2 <- stores # working on a copy so later examples still work
names(df2)
names(df2)[names(df2)=="storeclass2"] <- "My_Store_class"
names(df2)
fix(stores
fix(stores)
####### rename interactively
fix(stores) # results are saved on close
names(stores)
fix(stores)
string(stores)
str(stores)
install.packages("reshape")
library(reshape)
mydata <- rename(stores, c(StoreCode="MyStoreCode", Location = "MyLocation"))
str(mydata)
stores1 <- stores[c("StoreType","Location","OperatingCost" , "Total_Customers",
"AcqCostPercust", "BasketSize" ,"ProfitPercust","OwnStore")]
str(stores1)
#reorder row (here sorting order of rows by Operating cost in descending order)
View(stores)
store <- stores[order(stores$OperatingCost, decreasing=TRUE),] # use built in function
View(store)
newstores1 <- stores[order(-(stores$OperatingCost)),] # use built in function
newstores1
View(newstores1)
newstores1 <- stores[order((stores$OperatingCost)),] # use built in function
newstores1
View(newstores1)
#another way to order rows
newstores1 <- stores[order(-(stores$OperatingCost)),] # use built in function
newstores1
View(newstores1)
#rename interactively
fix(stores) # results are saved on close
install.packages("plyr")
library(plyr)
newstores1 <- arrange(stores, StoreName) # Use arrange from plyr package
newstores1 <- arrange(stores, StoreName,Location ) # Use arrange from plyr package
View(newstores1)
install.packages("plyr")
library(plyr)
newstores1 <- arrange(stores, StoreName) # Use arrange from plyr package
newstores1 <- arrange(stores, StoreName,Location ) # Use arrange from plyr package
View(newstores1)
newstores <- stores[order(stores$Location, stores$TotalSales, decreasing=TRUE),] #using built in function
View(newstores)
